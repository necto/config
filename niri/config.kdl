binds {
    // Mod key is Super (Mod4/Logo key)

    // Terminal
    Mod+Return { spawn "foot"; }

    // Emacs
    Mod+Backslash { spawn "emacsclient" "-c" "-n" "-a" "emacs" "--eval" "(switch-to-buffer nil)"; }

    // Org agenda/capture
    Mod+A { spawn "emacsclient" "-c" "-n" "--eval" "(my-org-agenda-cached)"; }
    Mod+T { spawn "emacsclient" "-c" "-F" "((name . \"org-protocol-capture\"))" "-n" "--eval" "(org-capture :keys \"t\")"; }
    Mod+C { spawn "emacsclient" "-c" "-F" "((name . \"org-protocol-capture\"))" "-n" "--eval" "(org-capture :keys \"n\")"; }
    Mod+N { spawn "emacsclient" "-c" "-F" "((name . \"org-protocol-capture\"))" "-n" "--eval" "(org-capture :keys \"n\")"; }

    // Kill window
    Mod+Shift+Q { close-window; }

    // Application launcher
    Mod+D { spawn "sh" "-c" "fuzzel -T foot | xargs niri msg action spawn --"; }
    Mod+P { spawn "sh" "-c" "fuzzel -T foot | xargs niri msg action spawn --"; }

    // Exit (use a confirmation dialog)
    Mod+Shift+E { quit; }

    // Focus movement (vim keys)
    Mod+H { focus-column-left; }
    Mod+J { focus-window-down; }
    Mod+K { focus-window-up; }
    Mod+L { focus-column-right; }

    // Focus movement (arrow keys)
    Mod+Left { focus-column-left; }
    Mod+Down { focus-window-down; }
    Mod+Up { focus-window-up; }
    Mod+Right { focus-column-right; }

    // Move windows (vim keys)
    Mod+Ctrl+H { move-column-left; }
    Mod+Ctrl+J { move-window-down; }
    Mod+Ctrl+K { move-window-up; }
    Mod+Ctrl+L { move-column-right; }

    // Move windows (arrow keys)
    Mod+Ctrl+Left { move-column-left; }
    Mod+Ctrl+Down { move-window-down; }
    Mod+Ctrl+Up { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }

    // Move workspace to monitor
    Mod+Ctrl+Shift+H { move-workspace-to-monitor-left; }
    Mod+Ctrl+Shift+L { move-workspace-to-monitor-right; }
    Mod+Ctrl+Shift+J { move-window-to-workspace-down; }
    Mod+Ctrl+Shift+K { move-window-to-workspace-up; }

    // Fullscreen
    Mod+F { fullscreen-window; }

    // Resize mode - Niri uses direct resize bindings
    Mod+R { switch-preset-column-width; }

    // Direct resize bindings
    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Equal { set-window-height "+10%"; }

    // Lock screen
    Mod+Z { spawn "swaylock" "-fkFl" "-s" "stretch" "-i" "~/.config/sway/resources/wallpaper-webb-universe.jpg"; }
    Mod+Shift+Z { spawn "swaylock" "-fkFl" "-s" "stretch" "-i" "~/.config/sway/resources/wallpaper-webb-universe.jpg"; }

    // Brightness control
    XF86MonBrightnessUp { spawn "brightnessctl" "s" "7%+"; }
    XF86MonBrightnessDown { spawn "brightnessctl" "s" "6%-"; }

    // Screenshots
    Print { screenshot; }

    // Volume control
    XF86AudioMute { spawn "pactl" "set-sink-mute" "@DEFAULT_SINK@" "toggle"; }
    XF86AudioRaiseVolume { spawn "pactl" "set-sink-volume" "@DEFAULT_SINK@" "+5%"; }
    XF86AudioLowerVolume { spawn "pactl" "set-sink-volume" "@DEFAULT_SINK@" "-5%"; }

    // Process monitor
    Mod+M { spawn "foot" "btop"; }

    // Additional useful Niri-specific bindings
    Mod+Comma { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    // Workspace navigation
    Mod+Shift+J { focus-workspace-down; }
    Mod+Shift+Up { focus-workspace-down; }
    Mod+Shift+K { focus-workspace-up; }
    Mod+Shift+Down { focus-workspace-up; }

    // Monitor focus
    Mod+Shift+H { focus-monitor-left; }
    Mod+Shift+L { focus-monitor-right; }

    Mod+O { toggle-overview; }

    Mod+Shift+slash { show-hotkey-overlay; }
}

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

spawn-at-startup "systemctl" "--user" "set-environment" "XDG_CURRENT_DESKTOP=niri"
spawn-at-startup "dbus-update-activation-environment" "--systemd" "WAYLAND_DISPLAY" "XDG_CURRENT_DESKTOP=niri"
spawn-at-startup "gammastep-indicator"
spawn-at-startup "nm-applet"
spawn-at-startup "syncthing" "--no-browser"
spawn-at-startup "dunst"
spawn-at-startup "waybar"
// spawn-sh-at-startup is passed verbatim to shell and can expand "~" and variables
spawn-sh-at-startup "swaybg -i ~/.config/sway/resources/wallpaper-tree-horizon.jpg -m fill"
// kanshi config is broken somewhat: it applies wrong position to the displays
spawn-sh-at-startup "pkill kanshi ; kanshi -c ~/.config/sway/kanshi.config"

// Remove window decorations
prefer-no-csd

input {
    keyboard {
        xkb {
            layout "us,ru"
            options "compose:ralt,grp:shift_caps_toggle"
        }
    }

    warp-mouse-to-focus
    focus-follows-mouse max-scroll-amount="10%"
}

layout {
    gaps 8

    preset-column-widths {
        proportion 1.0           // 100% of the output width
        proportion 0.33          // e.g., ~33%
        proportion 0.5           // e.g., 50%
    }

    default-column-width { proportion 0.5; }  // optional: new windows open at full width

    focus-ring {
        width 3
        active-color "#ff0000"
        inactive-color "#505050"
    }
}

// Idle configuration (using swayidle)
spawn-at-startup "swayidle" "-w" "timeout" "300" "swaylock -fkFl -s stretch -i ~/.config/sway/resources/wallpaper-webb-universe.jpg" "timeout" "600" "niri msg action power-off-monitors" "resume" "niri msg action power-on-monitors" "before-sleep" "swaylock -fkFl -s stretch -i ~/.config/sway/resources/wallpaper-webb-universe.jpg"

// TODO: when niri 25.09 is available,
// include it from a generated file
cursor {
    xcursor-theme "Bibata-Modern-Ice"
    xcursor-size 24
}
